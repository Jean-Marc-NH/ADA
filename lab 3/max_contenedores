#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>
#include <unordered_set>

using namespace std;

vector<pair<int, int>> pares;


vector<int> max_contenedores(int);
int max_toneladas(int);

int main()
{
	int capacidad; cin >> capacidad;

	int tmp = capacidad;
	int n; cin >> n;

	pares.resize(n);

	// First es para pesos y Seconde para contenedores

	for (int i{ 0 }; i < n; i++)cin >> pares[i].second;
	for (int i{ 0 }; i < n; i++)cin >> pares[i].first;


	// Cantidad maxima de toneladas posibles
	cout << "\ntoneladas: ";
	cout << max_toneladas(capacidad) << endl;
	cout << "\ncontenedores: ";
	for (auto a : max_contenedores(tmp)) cout << a << " ";


}

vector<int> max_contenedores(int capacidad)
{
	sort(pares.begin(), pares.end());

	vector<int> rptas;


	for (auto a : pares)
	{
		if (capacidad >= a.first)
		{
			capacidad -= a.first;
			rptas.push_back(a.second);
		}
	}
	return rptas;
}

int max_toneladas(int capacidad)
{
	int max = 0;

	for (auto a : pares)
	{
		unordered_set<int> sumas = { 0 };

		for (auto b : sumas)
		{
			int suma = b + a.first;
			sumas.insert(suma);
			if (abs(capacidad - suma) < abs(capacidad - max)) max = suma;
		}
	}
	return max;
}
